version: 0.0.4
jobId: "346"
jobName: SADP PySpark
jobType: Source Aligned Data Product
domain: sale
alias: read_final_weather_data_daily_8Sept
discoveryPort:
  name: SADP PySpark
inputPorts:
  - alias: Weather_Data_Demo_s3_user_Miloni_1
    isDynamic: true
    path: s3://byte-etl-externaldemo/weather_data/20230626110117.csv
    optional:
      persistDataFrame: false
      advanceOptions:
        delimiter: ","
      enableDataReconciliation: false
      enforceSchema: false
      connection: s3-user-miloni
      dataSetUrn: urn:dv:dataset:7e7c8a67-5082-441c-96c1-06497e66c3a8
    type: inputDelimited
productState:
  persistDataFrame: false
  catalogType: glue
  enforceSchema: false
  connection: Base S3 Connectivity
  stepName: read final weather data daily 8Sept
  tableName: s3Source.weather_daily
  warehousePath: s3://bp-spark-sql-library-test-acc/
  catalogName: glue
  type: readDataIceberg
  isStateManagement: true
  sequence: 3
  alias: read_final_weather_data_daily_8Sept
  refreshInterval: None
  retentionVersions: ""
  logicalSchema:
    properties:
      City:
        type: STRING
        description: ""
      Region:
        type: STRING
        description: ""
      Country:
        type: STRING
        description: ""
      Latitude:
        type: STRING
        description: ""
      Longitude:
        type: STRING
        description: ""
      Timezone:
        type: STRING
        description: ""
      Local Time:
        type: STRING
        description: ""
      Cloud ID:
        type: STRING
        description: ""
      Feels like Celcius:
        type: STRING
        description: ""
      Feels like fahrenheit:
        type: STRING
        description: ""
      Gust speed in kph:
        type: STRING
        description: ""
      Gust speed in mph:
        type: STRING
        description: ""
      Humidity:
        type: STRING
        description: ""
      Is day time?:
        type: STRING
        description: ""
      Last update:
        type: STRING
        description: ""
      Last updated time in epoch:
        type: STRING
        description: ""
      Precipitation in inch:
        type: STRING
        description: ""
      Precipitation in mm:
        type: STRING
        description: ""
      Pressure:
        type: STRING
        description: ""
      Precipitation in mb:
        type: STRING
        description: ""
      Temperature in celcius:
        type: STRING
        description: ""
      Temperature in fahrenheit:
        type: STRING
        description: ""
      UV:
        type: STRING
        description: ""
      Visibility in km:
        type: STRING
        description: ""
      Visibility in miles:
        type: STRING
        description: ""
      Wind Degree:
        type: STRING
        description: ""
      Wind Direction:
        type: STRING
        description: ""
      Wind in kph:
        type: STRING
        description: ""
      Wind in mph:
        type: STRING
        description: ""
  enforceSchemaMethod: ""
  isProfilingEnabled: false
transformation:
  - isDynamic: true
    alias: EMR_PySpark_1
    description: Run pyspark code
    sequence: 2
    arguments:
      - s3://byte-etl-externaldemo/weather_data/20230626110117.csv
    pythonFilePath: s3://bp-spark-sql-library-test-acc/custom-jobs/CustomPythonJobWriteParquet.py
    inputDataFrameList:
      - inputDataFrame: ""
        tempViewName: ""
    optional:
      pythonEnvTarGZPath: s3://byte-etl-externaldemo/pyspark_serverless_test/pyspark_venv.tar.gz
    type: customPySparkEMRServerless
controlPort:
  dataQualityRules: {}
outputPort:
  subscriptionChannels:
    - channelType: Postgres
      queryType: SQL
    - channelType: Dataproduct
      queryType: SQL
