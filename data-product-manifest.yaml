version: 0.0.10
jobId: "185"
jobName: Test Connection redshift connections- Miloni
jobType: Source Aligned Data Product
alias: s3
discoveryPort:
  name: Test Connection redshift connections- Miloni
inputPorts:
  - alias: redshift_1
    isDynamic: true
    connection: Redshift
    query: select * from public.billing_1223
    endPoint: s3.us-east-1.amazonaws.com
    temporaryPathS3: s3://byte-etl-externaldemo/pyspark_serverless_test/temp/weather_lr
    optional:
      s3connections: s3 with Role
      persistDataFrame: false
      enableDataReconciliation: false
      enforceSchema: false
      dataSetUrn: urn:dv:dataset:1ca7de25-0867-4777-b80e-0db2833b6f01
    type: readRedshiftTableByQuery
productState:
  isDynamic: true
  alias: s3
  retentionVersions: ""
  logicalSchema:
    properties:
      x:
        type: STRING
        description: ""
  stateStoreType: loadDataIceberg
  isProfilingEnabled: false
  updateStrategy: Overwrite
  tableName: s3source.tablename
  warehousePath: s3://bp-spark-sql-library-test-acc/
  catalogName: glue
  optional:
    persistDataFrame: false
    enableDataReconciliation: false
    enforceSchema: true
    enforceSchemaMethod: Warning
    catalogType: glue
    connection: S3 with User
  refreshInterval: 0 12 * * *
transformation:
  - alias: Spark_SQL_1
    type: SQL
    description: step name
    query: select * from temp
    sequenceNo: 2
    references:
      - alias: redshift_1
        sqlReference: temp
controlPort:
  dataQualityRules: {}
outputPort:
  subscriptionChannels:
    - channelType: Postgres
      queryType: SQL
