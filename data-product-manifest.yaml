version: 0.0.5
jobId: "185"
jobName: Test Connection redshift connections- Miloni
jobType: Source Aligned Data Product
alias: step_3
discoveryPort:
  name: Test Connection redshift connections- Miloni
inputPorts:
  - alias: redshift_1
    isDynamic: true
    connection: Redshift
    query: public.encrypted_data_123
    endPoint: s3.us-east-1.amazonaws.com
    temporaryPathS3: s3://byte-etl-externaldemo/pyspark_serverless_test/temp/weather_lr
    optional:
      s3connections: S3 with User
      persistDataFrame: false
      enableDataReconciliation: false
      enforceSchema: false
      dataSetUrn: urn:dv:dataset:1ca7de25-0867-4777-b80e-0db2833b6f01
    type: readRedshiftTableByQuery
productState:
  mergeSchema: true
  persistDataFrame: false
  enableDataReconciliation: false
  enforceSchema: false
  connection: S3 with User
  stepName: step 3
  path: s3://byte-etl-externaldemo/weather_data_all_parquet/
  type: inputParquet
  isStateManagement: true
  sequence: 3
  alias: step_3
  refreshInterval: 0 12 * * *
  retentionVersions: ""
  logicalSchema: ""
  enforceSchemaMethod: ""
  isProfilingEnabled: false
transformation:
  - alias: Spark_SQL_1
    type: SQL
    description: step name
    query: select * from temp
    sequenceNo: 2
    references:
      - alias: redshift_1
        sqlReference: temp
controlPort:
  dataQualityRules: {}
outputPort:
  subscriptionChannels:
    - channelType: Postgres
      queryType: SQL
